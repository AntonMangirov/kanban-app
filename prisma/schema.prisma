generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  boards Board[]
  tasks  Task[]

  @@map("users")
}

model Board {
  id          String   @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId  String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  columns Column[]
  tasks   Task[]

  @@map("boards")
}

model Column {
  id        String   @id @default(cuid())
  title     String
  order     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  boardId String
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  tasks   Task[]

  @@map("columns")
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  priority    Priority @default(MEDIUM)
  dueDate     DateTime?
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  boardId  String
  board    Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  columnId String
  column   Column @relation(fields: [columnId], references: [id], onDelete: Cascade)
  assigneeId String?
  assignee   User?  @relation(fields: [assigneeId], references: [id], onDelete: SetNull)

  tags TaskTag[]

  @@map("tasks")
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  color String @default("#1976d2")

  tasks TaskTag[]

  @@map("tags")
}

model TaskTag {
  id     String @id @default(cuid())
  taskId String
  tagId  String

  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  tag  Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@unique([taskId, tagId])
  @@map("task_tags")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}
